{"version":3,"sources":["components/Nav/Nav.js","components/Work/Work.js","components/About/About.js","components/Posts/Blog.js","components/Posts/Posts.js","components/Post/Post.js","components/Home/Home.js","components/Footer/Footer.js","components/App.js","serviceWorker.js","index.js"],"names":["Nav","to","className","href","card","id","link","title","role","description","cta","CaseStudies","Helmet","charSet","name","content","aria-label","map","i","key","rel","target","Blog","date","heading","img","url","alt","paragraph","Posts","Post","match","blog","find","params","postId","src","Array","isArray","Home","Footer","App","ReactGA","initialize","pageview","window","location","pathname","search","path","component","Work","About","exact","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ced6bc86.chunk.js","sourcesContent":["import React from 'react';\nimport './Nav.scss';\nimport {\n  Link\n} from \"react-router-dom\";\n\nexport default function Nav() {\n  return (\n    <nav>\n      <h1>\n        <Link to=\"/\">GG</Link>\n      </h1>\n\n      {<ul className=\"nav\">\n          <li>\n            <Link to=\"/work\">Work</Link></li>\n          <li>\n            <a href=\"https://gabegonzaga.io/writing\">Blog</a>\n          </li>\n        </ul>}\n    </nav>\n  )\n}\n","import React from 'react';\nimport  './Work.scss';\nimport { Helmet } from 'react-helmet';\n\nconst card = [\n    {\n        id: 0,\n        link: 'https://gabegonzaga.io/addon',\n        title: 'AddOn Networks',\n        role: 'Frontend Development',\n        description: 'At AddOn, I supported the marketing department by managing and coordinating a dev team from Kazakhstan. We developed features for internal sales flow tracking, and created web media for partner companies. Initially, I was hired for a one month contract.',\n        cta: 'Read More'\n    },\n    {\n        id: 1,\n        link: 'https://gabegonzaga.io/edco',\n        title: 'Edco',\n        role: 'Frontend Development',\n        description: 'Edco is a fundraising platform for K-12 schools. I worked closely with a project manager to update, cleanup, and debug CSS Bootstrap code. I restyled landing pages, forms, and content to brand guidelines and assisted with the Edco platform launch, September 2019.',\n        cta: 'Read More'\n    },\n    {\n        id: 2,\n        link: 'https://prolineoptions.com',\n        title: 'Proline Options',\n        role: 'Frontend Development',\n        description: 'Proline Options is a partner company of AddOn Networks. I coordinated and assisted their marketing team and managed the website launch. I developed frontend landing pages, widgets, tabs, and web media.',\n        cta: 'Visit Website'\n    },\n    {\n        id: 3,\n        link: 'https://smithandnoble.com',\n        title: 'Smith & Noble',\n        role: 'Frontend Development, Email Marketing',\n        description: 'Smith & Noble provides custom window design and is based in Corona, CA. I worked with the marketing team developing landing pages, analyzing A/B tests, conversions, and supported creative email campaigns.',\n        cta: 'Visit Website'\n    }\n]\n\nexport default function CaseStudies() {\n    return (\n        <div>\n            <Helmet>\n                <meta charSet=\"utf-8\" />\n                <meta name=\"description\" content=\"Gabriel Gonzaga User Experience Work\" />\n                <title>Work - Gabriel Gonzaga</title>\n            </Helmet>\n\n            <h2>Work <span role=\"img\" aria-label=\"microscope\">ðŸ”¬</span></h2>\n            <div className=\"work\">\n                {card.map(i =>\n                    <div className=\"work-card\" key={i.id}>\n                        <a rel=\"noopener noreferrer\" target=\"blank\" href={i.link}>\n                            <h3>{i.title}</h3>\n                            <div><span>Role: {i.role}</span></div>\n                            <p>{i.description}</p>\n                            <small>{i.cta} â†’</small>\n                        </a>\n                    </div>\n                )}\n            </div>\n            <div className=\"moreProjects\">\n              <a className=\"button\" href=\"https://github.com/gabrielmgonzaga\" target=\"blank\">See Github Projects â†’</a>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport './About.scss';\nimport { Helmet } from 'react-helmet';\n\nexport default function Blog() {\n    return (\n        <div>\n            <Helmet>\n                <meta charSet=\"utf-8\" />\n                <meta name=\"description\" content=\"Gabriel Gonzaga User Experience Profile\" />\n                <title>About - Gabriel Gonzaga</title>\n            </Helmet>\n\n            <section className=\"about\">\n                <h2>About <span role=\"img\" aria-label=\"globe\">ðŸŒŽ</span></h2>\n\n                <p>In the past 3 years, I assisted creative marketing teams, businesses, and stakeholders with web design and development.</p>\n                <p>Before, I worked at UC Irvine medical center assisting operating room teams save lives. I have a natural empathy towards people and aim to be a positive influence to those around me.</p>\n                <p>Aside from work, I live for music, nature, animals, and family.</p>\n                <p>Thanks for reading!</p>\n            </section>\n        </div>\n    )\n}\n","const Blog = [\n  {\n    id: 'First-Blog-Post',\n    title: 'First Blog Post',\n    date: 'November 25, 2020',\n    content: [\n      {\n        heading: 'Heading',\n        img: {\n          url: 'https://images.unsplash.com/photo-1606365623954-5f20df7ce121?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2689&q=80',\n          alt: 'Sitemap'\n        },\n        paragraph: [\n          'This is also useful for animated transitions since the matched <Route> is rendered in the same position as the previous one. This is also useful for animated transitions since the matched <Route> is rendered in the same position as the previous one.',\n          'Two'\n        ]\n      }\n    ]\n  }\n]\n\nexport default Blog\n","import React from 'react';\nimport './Posts.scss';\nimport Blog from './Blog.js';\nimport { Link } from 'react-router-dom';\n\nexport default function Posts() {\n  return (\n    <div className=\"posts\">\n      <h2>Blog <span role=\"img\" aria-label=\"notebook\">ðŸ““</span></h2>\n      <hr />\n\n      {Blog.map(({ id, title, date }) =>\n          <Link to={`/posts/${id}`} key={id}>\n            <span className=\"title\">{title}</span>\n            <span className=\"date\">{date}</span>\n          </Link>\n        )}\n    </div>\n  )\n}\n","import React from 'react';\nimport Blog from '../Posts/Blog.js';\n\nexport default function Post({ match }) {\n  const blog = Blog.find(({ id }) => id == match.params.postId)\n\n  return (\n    <div>\n      {blog.content.map(({ heading, paragraph, img }) =>\n        <div>\n          { heading === '' ? null : <h2>{heading}</h2> }\n          { img.url === '' ? null : <img src={img.url} alt={img.alt} /> }\n          { Array.isArray(paragraph) ? paragraph.map(paragraph => <p>{paragraph}</p>) : null }\n        </div>\n      )}\n    </div>\n  )\n}\n","import React from 'react';\nimport './Home.scss';\nimport { Helmet } from 'react-helmet';\nimport { Link } from 'react-router-dom';\n\nexport default function Home() {\n    return (\n        <div className=\"home\">\n            <Helmet>\n                <meta charSet=\"utf-8\" />\n                <meta name=\"description\" content=\"Gabriel Gonzaga User Experience Portfolio\" />\n                <title>Home - Gabe Gonzaga</title>\n            </Helmet>\n\n            <h1>Gabe Gonzaga</h1>\n\n            <p>\n              I'm a hybrid Web Designer/Developer with three years experience creating digital web content.\n               Currently studying UX Design at UCLA extension. Focused on solving user and business problems with a human centered approach.\n            </p>\n\n            <br></br>\n\n            <Link className=\"button\" to=\"/work\">See Work</Link>\n        </div>\n    )\n}\n","import React from 'react';\nimport './Footer.scss';\nimport { Link } from \"react-router-dom\";\n\nexport default function Footer() {\n    return (\n        <footer>\n            <ul>\n                <li>\n                  <Link to=\"/about\">About</Link>\n                </li>\n                <li>\n                    <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://linkedin.com/in/gabriel-gonzaga\">LinkedIn</a>\n                </li>\n                <li>\n                    <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://github.com/gabrielmgonzaga\">Github</a>\n                </li>\n            </ul>\n        </footer>\n    )\n}\n","import React from 'react';\nimport '../index.scss';\nimport { HashRouter, Route } from 'react-router-dom';\nimport ReactGA from 'react-ga';\n\nimport Nav from './Nav/Nav';\nimport Work from './Work/Work';\nimport About from './About/About';\nimport Posts from './Posts/Posts';\nimport Post from './Post/Post';\nimport Home from './Home/Home';\nimport Footer from './Footer/Footer';\n\nfunction App() {\n  ReactGA.initialize('UA-99246177-2');\n  ReactGA.pageview(window.location.pathname + window.location.search);\n\n  return (\n    <HashRouter>\n      <div className=\"main-wrapper\">\n          <Nav />\n\n          <main>\n              <Route path=\"/work\" component={Work} />\n              <Route path=\"/about\" component={About} />\n              <Route exact path=\"/posts\" component={Posts} />\n              <Route path={`/posts/:postId`} component={Post} />\n              <Route exact path=\"/\" component={Home} />\n          </main>\n\n          <Footer />\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}